path('../DistributedCoresetAndPCA', path())
%%
clear;
P=importdata('../data/spiral.csv');
Pwclass = P;
P=P(:,1:2);

sigma_1 = 0.1;
sigma_2 = 0.1;
NOISE = mvnrnd([0,0], [sigma_1,0;0,sigma_2], round(size(P,1)));
%P = vertcat(P, NOISE);
P = P + NOISE;

%%
for i=0.8:0.01:3
    [labels, W] = SpectralClustering(P, 3, i);

    sum_k = 0
    for k=unique(labels)
        %find the class with max inters.
        maxi_len = 0;
        maxi_class = -1;
        k_labeled = find(labels == k);
        for j=unique(Pwclass(:,3))
            j_labeled = find(labels == j);
            int_len = length(intersect(j_labeled,k_labeled));
            if int_len > maxi_len
                maxi_len = int_len;
                maxi_class = j;
            end
        end
        sum_k = sum_k + maxi_len;
        
        (length(k_labeled)/length(labels)) * lo
    end
    purity = sum_k / length(labels);
end
%gscatter(P(:,1),P(:,2),labels(:,1))
%%